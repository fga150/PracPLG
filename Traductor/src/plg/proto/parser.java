
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Sat Jun 08 00:39:49 CEST 2013
//----------------------------------------------------

package plg.proto;

import java_cup.runtime.*;
import es.ucm.fdi.plg.evlib.TAtributos;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Sat Jun 08 00:39:49 CEST 2013
  */
public class parser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public parser() {super();}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\164\000\002\002\010\000\002\002\004\000\002\003" +
    "\007\000\002\004\006\000\002\004\002\000\002\005\004" +
    "\000\002\005\003\000\002\006\010\000\002\007\006\000" +
    "\002\007\002\000\002\010\004\000\002\010\003\000\002" +
    "\011\006\000\002\012\003\000\002\012\003\000\002\013" +
    "\003\000\002\013\003\000\002\013\003\000\002\013\003" +
    "\000\002\013\003\000\002\014\003\000\002\014\005\000" +
    "\002\015\003\000\002\015\002\000\002\016\005\000\002" +
    "\016\003\000\002\014\006\000\002\017\003\000\002\017" +
    "\003\000\002\020\006\000\002\020\002\000\002\021\004" +
    "\000\002\021\003\000\002\022\006\000\002\023\006\000" +
    "\002\023\002\000\002\024\004\000\002\024\003\000\002" +
    "\025\013\000\002\026\003\000\002\026\002\000\002\027" +
    "\005\000\002\027\003\000\002\030\004\000\002\030\005" +
    "\000\002\031\004\000\002\032\006\000\002\033\004\000" +
    "\002\033\003\000\002\034\003\000\002\034\003\000\002" +
    "\034\003\000\002\034\003\000\002\034\003\000\002\034" +
    "\003\000\002\034\003\000\002\034\003\000\002\035\006" +
    "\000\002\036\006\000\002\037\006\000\002\040\007\000" +
    "\002\041\007\000\002\042\011\000\002\042\007\000\002" +
    "\043\003\000\002\043\002\000\002\044\007\000\002\045" +
    "\010\000\002\046\003\000\002\046\002\000\002\047\005" +
    "\000\002\047\003\000\002\050\005\000\002\051\003\000" +
    "\002\052\005\000\002\052\003\000\002\053\005\000\002" +
    "\053\005\000\002\053\003\000\002\054\005\000\002\054" +
    "\005\000\002\054\003\000\002\055\005\000\002\055\003" +
    "\000\002\056\004\000\002\056\003\000\002\057\005\000" +
    "\002\057\003\000\002\057\003\000\002\060\003\000\002" +
    "\060\003\000\002\060\003\000\002\060\003\000\002\060" +
    "\003\000\002\061\003\000\002\061\003\000\002\061\003" +
    "\000\002\061\003\000\002\061\003\000\002\061\003\000" +
    "\002\062\003\000\002\062\003\000\002\063\003\000\002" +
    "\063\003\000\002\063\003\000\002\064\003\000\002\064" +
    "\003\000\002\065\005\000\002\065\005\000\002\065\005" +
    "\000\002\065\005\000\002\065\003\000\002\065\003\000" +
    "\002\066\003\000\002\066\006\000\002\066\005" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\326\000\004\014\005\001\002\000\004\002\330\001" +
    "\002\000\004\045\006\001\002\000\004\006\007\001\002" +
    "\000\004\052\010\001\002\000\014\005\ufffd\015\011\017" +
    "\ufffd\021\ufffd\023\ufffd\001\002\000\004\052\315\001\002" +
    "\000\012\005\ufff8\017\ufff8\021\015\023\ufff8\001\002\000" +
    "\004\053\014\001\002\000\004\002\001\001\002\000\004" +
    "\052\304\001\002\000\010\005\uffe3\017\017\023\uffe3\001" +
    "\002\000\004\052\273\001\002\000\006\005\022\023\uffde" +
    "\001\002\000\004\023\067\001\002\000\004\052\023\001" +
    "\002\000\004\004\025\001\002\000\006\004\025\053\270" +
    "\001\002\000\004\045\027\001\002\000\006\004\uffdc\053" +
    "\uffdc\001\002\000\004\006\030\001\002\000\004\056\031" +
    "\001\002\000\022\006\045\040\044\041\033\042\046\043" +
    "\035\044\032\056\034\057\uffd9\001\002\000\014\006\uffee" +
    "\047\uffee\054\uffee\057\uffee\070\uffee\001\002\000\014\006" +
    "\ufff1\047\ufff1\054\ufff1\057\ufff1\070\ufff1\001\002\000\022" +
    "\006\045\040\044\041\033\042\046\043\035\044\032\056" +
    "\034\057\uffea\001\002\000\014\006\uffef\047\uffef\054\uffef" +
    "\057\uffef\070\uffef\001\002\000\014\006\ufff4\047\ufff4\054" +
    "\ufff4\057\ufff4\070\ufff4\001\002\000\004\057\061\001\002" +
    "\000\014\006\ufff3\047\ufff3\054\ufff3\057\ufff3\070\ufff3\001" +
    "\002\000\006\047\uffd7\057\uffd7\001\002\000\010\006\052" +
    "\054\053\070\051\001\002\000\006\047\047\057\uffda\001" +
    "\002\000\014\006\ufff2\047\ufff2\054\ufff2\057\ufff2\070\ufff2" +
    "\001\002\000\014\006\uffed\047\uffed\054\uffed\057\uffed\070" +
    "\uffed\001\002\000\014\006\ufff0\047\ufff0\054\ufff0\057\ufff0" +
    "\070\ufff0\001\002\000\020\006\045\040\044\041\033\042" +
    "\046\043\035\044\032\056\034\001\002\000\006\047\uffd8" +
    "\057\uffd8\001\002\000\004\006\060\001\002\000\006\047" +
    "\uffd6\057\uffd6\001\002\000\006\006\056\007\054\001\002" +
    "\000\004\055\uffe5\001\002\000\004\055\057\001\002\000" +
    "\004\055\uffe6\001\002\000\014\006\uffe7\047\uffe7\054\uffe7" +
    "\057\uffe7\070\uffe7\001\002\000\006\047\uffd5\057\uffd5\001" +
    "\002\000\004\052\062\001\002\000\006\017\017\023\uffe3" +
    "\001\002\000\004\023\067\001\002\000\004\053\065\001" +
    "\002\000\006\004\uffdb\053\uffdb\001\002\000\004\053\uffd4" +
    "\001\002\000\004\052\070\001\002\000\022\006\110\024" +
    "\076\025\112\026\102\027\100\030\103\034\077\037\075" +
    "\001\002\000\032\006\uffca\024\uffca\025\uffca\026\uffca\027" +
    "\uffca\030\uffca\032\uffca\033\uffca\034\uffca\036\uffca\037\uffca" +
    "\053\uffca\001\002\000\032\006\uffd0\024\uffd0\025\uffd0\026" +
    "\uffd0\027\uffd0\030\uffd0\032\uffd0\033\uffd0\034\uffd0\036\uffd0" +
    "\037\uffd0\053\uffd0\001\002\000\032\006\uffd1\024\uffd1\025" +
    "\uffd1\026\uffd1\027\uffd1\030\uffd1\032\uffd1\033\uffd1\034\uffd1" +
    "\036\uffd1\037\uffd1\053\uffd1\001\002\000\010\050\257\051" +
    "\205\054\204\001\002\000\004\006\243\001\002\000\004" +
    "\056\237\001\002\000\024\006\110\007\136\010\131\011" +
    "\134\012\135\013\130\056\132\067\116\100\120\001\002" +
    "\000\004\056\230\001\002\000\024\006\110\024\076\025" +
    "\112\026\102\027\100\030\103\034\077\037\075\053\227" +
    "\001\002\000\004\056\224\001\002\000\024\006\110\007" +
    "\136\010\131\011\134\012\135\013\130\056\132\067\116" +
    "\100\120\001\002\000\032\006\uffcb\024\uffcb\025\uffcb\026" +
    "\uffcb\027\uffcb\030\uffcb\032\uffcb\033\uffcb\034\uffcb\036\uffcb" +
    "\037\uffcb\053\uffcb\001\002\000\032\006\uffcc\024\uffcc\025" +
    "\uffcc\026\uffcc\027\uffcc\030\uffcc\032\uffcc\033\uffcc\034\uffcc" +
    "\036\uffcc\037\uffcc\053\uffcc\001\002\000\032\006\uffcd\024" +
    "\uffcd\025\uffcd\026\uffcd\027\uffcd\030\uffcd\032\uffcd\033\uffcd" +
    "\034\uffcd\036\uffcd\037\uffcd\053\uffcd\001\002\000\032\006" +
    "\uffce\024\uffce\025\uffce\026\uffce\027\uffce\030\uffce\032\uffce" +
    "\033\uffce\034\uffce\036\uffce\037\uffce\053\uffce\001\002\000" +
    "\062\031\uff90\035\uff90\046\uff90\047\uff90\050\uff90\051\uff90" +
    "\054\uff90\055\uff90\057\uff90\060\uff90\061\uff90\062\uff90\063" +
    "\uff90\064\uff90\065\uff90\066\uff90\067\uff90\070\uff90\071\uff90" +
    "\072\uff90\073\uff90\074\uff90\101\uff90\102\uff90\001\002\000" +
    "\032\006\uffcf\024\uffcf\025\uffcf\026\uffcf\027\uffcf\030\uffcf" +
    "\032\uffcf\033\uffcf\034\uffcf\036\uffcf\037\uffcf\053\uffcf\001" +
    "\002\000\004\056\114\001\002\000\032\006\uffc9\024\uffc9" +
    "\025\uffc9\026\uffc9\027\uffc9\030\uffc9\032\uffc9\033\uffc9\034" +
    "\uffc9\036\uffc9\037\uffc9\053\uffc9\001\002\000\024\006\110" +
    "\007\136\010\131\011\134\012\135\013\130\056\132\067" +
    "\116\100\120\001\002\000\020\006\110\007\136\010\131" +
    "\011\134\012\135\013\130\056\211\001\002\000\020\006" +
    "\uff91\007\uff91\010\uff91\011\uff91\012\uff91\013\uff91\056\uff91" +
    "\001\002\000\060\031\uffaa\035\uffaa\046\uffaa\047\uffaa\051" +
    "\205\054\204\055\uffaa\057\uffaa\060\uffaa\061\uffaa\062\uffaa" +
    "\063\uffaa\064\uffaa\065\uffaa\066\uffaa\067\uffaa\070\uffaa\071" +
    "\uffaa\072\uffaa\073\uffaa\074\uffaa\101\uffaa\102\uffaa\001\002" +
    "\000\020\006\uff92\007\uff92\010\uff92\011\uff92\012\uff92\013" +
    "\uff92\056\uff92\001\002\000\054\031\uffae\035\uffae\046\uffae" +
    "\047\uffae\055\uffae\057\uffae\060\uffae\061\uffae\062\uffae\063" +
    "\uffae\064\uffae\065\uffae\066\uffae\067\uffae\070\uffae\071\uffae" +
    "\072\uffae\073\201\074\200\101\uffae\102\uffae\001\002\000" +
    "\050\031\uffb0\035\uffb0\046\uffb0\047\uffb0\055\uffb0\057\uffb0" +
    "\060\uffb0\061\uffb0\062\uffb0\063\uffb0\064\uffb0\065\uffb0\066" +
    "\uffb0\067\uffb0\070\uffb0\071\uffb0\072\uffb0\101\uffb0\102\uffb0" +
    "\001\002\000\050\031\uffb3\035\uffb3\046\uffb3\047\uffb3\055" +
    "\uffb3\057\uffb3\060\uffb3\061\uffb3\062\uffb3\063\uffb3\064\uffb3" +
    "\065\uffb3\066\uffb3\067\uffb3\070\170\071\173\072\167\101" +
    "\171\102\uffb3\001\002\000\040\031\uffb6\035\uffb6\046\uffb6" +
    "\047\uffb6\055\uffb6\057\uffb6\060\160\061\155\062\157\063" +
    "\153\064\161\065\162\066\156\067\154\102\165\001\002" +
    "\000\004\057\151\001\002\000\016\031\uffb8\035\uffb8\046" +
    "\uffb8\047\uffb8\055\uffb8\057\uffb8\001\002\000\054\031\uffac" +
    "\035\uffac\046\uffac\047\uffac\055\uffac\057\uffac\060\uffac\061" +
    "\uffac\062\uffac\063\uffac\064\uffac\065\uffac\066\uffac\067\uffac" +
    "\070\uffac\071\uffac\072\uffac\073\uffac\074\uffac\101\uffac\102" +
    "\uffac\001\002\000\054\031\uffa4\035\uffa4\046\uffa4\047\uffa4" +
    "\055\uffa4\057\uffa4\060\uffa4\061\uffa4\062\uffa4\063\uffa4\064" +
    "\uffa4\065\uffa4\066\uffa4\067\uffa4\070\uffa4\071\uffa4\072\uffa4" +
    "\073\uffa4\074\uffa4\101\uffa4\102\uffa4\001\002\000\054\031" +
    "\uffa8\035\uffa8\046\uffa8\047\uffa8\055\uffa8\057\uffa8\060\uffa8" +
    "\061\uffa8\062\uffa8\063\uffa8\064\uffa8\065\uffa8\066\uffa8\067" +
    "\uffa8\070\uffa8\071\uffa8\072\uffa8\073\uffa8\074\uffa8\101\uffa8" +
    "\102\uffa8\001\002\000\034\006\110\007\136\010\131\011" +
    "\134\012\135\013\130\042\143\056\132\067\116\075\137" +
    "\076\140\077\142\100\120\001\002\000\054\031\uffa9\035" +
    "\uffa9\046\uffa9\047\uffa9\055\uffa9\057\uffa9\060\uffa9\061\uffa9" +
    "\062\uffa9\063\uffa9\064\uffa9\065\uffa9\066\uffa9\067\uffa9\070" +
    "\uffa9\071\uffa9\072\uffa9\073\uffa9\074\uffa9\101\uffa9\102\uffa9" +
    "\001\002\000\054\031\uffa7\035\uffa7\046\uffa7\047\uffa7\055" +
    "\uffa7\057\uffa7\060\uffa7\061\uffa7\062\uffa7\063\uffa7\064\uffa7" +
    "\065\uffa7\066\uffa7\067\uffa7\070\uffa7\071\uffa7\072\uffa7\073" +
    "\uffa7\074\uffa7\101\uffa7\102\uffa7\001\002\000\054\031\uffa5" +
    "\035\uffa5\046\uffa5\047\uffa5\055\uffa5\057\uffa5\060\uffa5\061" +
    "\uffa5\062\uffa5\063\uffa5\064\uffa5\065\uffa5\066\uffa5\067\uffa5" +
    "\070\uffa5\071\uffa5\072\uffa5\073\uffa5\074\uffa5\101\uffa5\102" +
    "\uffa5\001\002\000\054\031\uffa6\035\uffa6\046\uffa6\047\uffa6" +
    "\055\uffa6\057\uffa6\060\uffa6\061\uffa6\062\uffa6\063\uffa6\064" +
    "\uffa6\065\uffa6\066\uffa6\067\uffa6\070\uffa6\071\uffa6\072\uffa6" +
    "\073\uffa6\074\uffa6\101\uffa6\102\uffa6\001\002\000\004\057" +
    "\150\001\002\000\004\057\147\001\002\000\004\057\146" +
    "\001\002\000\004\057\145\001\002\000\004\057\144\001" +
    "\002\000\020\006\uff96\007\uff96\010\uff96\011\uff96\012\uff96" +
    "\013\uff96\056\uff96\001\002\000\020\006\uff93\007\uff93\010" +
    "\uff93\011\uff93\012\uff93\013\uff93\056\uff93\001\002\000\054" +
    "\031\uffab\035\uffab\046\uffab\047\uffab\055\uffab\057\uffab\060" +
    "\uffab\061\uffab\062\uffab\063\uffab\064\uffab\065\uffab\066\uffab" +
    "\067\uffab\070\uffab\071\uffab\072\uffab\073\uffab\074\uffab\101" +
    "\uffab\102\uffab\001\002\000\020\006\uff94\007\uff94\010\uff94" +
    "\011\uff94\012\uff94\013\uff94\056\uff94\001\002\000\020\006" +
    "\uff95\007\uff95\010\uff95\011\uff95\012\uff95\013\uff95\056\uff95" +
    "\001\002\000\004\046\152\001\002\000\032\006\uffc4\024" +
    "\uffc4\025\uffc4\026\uffc4\027\uffc4\030\uffc4\032\uffc4\033\uffc4" +
    "\034\uffc4\036\uffc4\037\uffc4\053\uffc4\001\002\000\024\006" +
    "\uffa1\007\uffa1\010\uffa1\011\uffa1\012\uffa1\013\uffa1\056\uffa1" +
    "\067\uffa1\100\uffa1\001\002\000\024\006\uff9c\007\uff9c\010" +
    "\uff9c\011\uff9c\012\uff9c\013\uff9c\056\uff9c\067\uff9c\100\uff9c" +
    "\001\002\000\024\006\uffa3\007\uffa3\010\uffa3\011\uffa3\012" +
    "\uffa3\013\uffa3\056\uffa3\067\uffa3\100\uffa3\001\002\000\024" +
    "\006\uff9d\007\uff9d\010\uff9d\011\uff9d\012\uff9d\013\uff9d\056" +
    "\uff9d\067\uff9d\100\uff9d\001\002\000\024\006\uffa0\007\uffa0" +
    "\010\uffa0\011\uffa0\012\uffa0\013\uffa0\056\uffa0\067\uffa0\100" +
    "\uffa0\001\002\000\024\006\uffa2\007\uffa2\010\uffa2\011\uffa2" +
    "\012\uffa2\013\uffa2\056\uffa2\067\uffa2\100\uffa2\001\002\000" +
    "\024\006\uff9f\007\uff9f\010\uff9f\011\uff9f\012\uff9f\013\uff9f" +
    "\056\uff9f\067\uff9f\100\uff9f\001\002\000\024\006\uff9e\007" +
    "\uff9e\010\uff9e\011\uff9e\012\uff9e\013\uff9e\056\uff9e\067\uff9e" +
    "\100\uff9e\001\002\000\024\006\110\007\136\010\131\011" +
    "\134\012\135\013\130\056\132\067\116\100\120\001\002" +
    "\000\024\006\110\007\136\010\131\011\134\012\135\013" +
    "\130\056\132\067\116\100\120\001\002\000\024\006\110" +
    "\007\136\010\131\011\134\012\135\013\130\056\132\067" +
    "\116\100\120\001\002\000\050\031\uffb4\035\uffb4\046\uffb4" +
    "\047\uffb4\055\uffb4\057\uffb4\060\uffb4\061\uffb4\062\uffb4\063" +
    "\uffb4\064\uffb4\065\uffb4\066\uffb4\067\uffb4\070\170\071\173" +
    "\072\167\101\171\102\uffb4\001\002\000\024\006\uff99\007" +
    "\uff99\010\uff99\011\uff99\012\uff99\013\uff99\056\uff99\067\uff99" +
    "\100\uff99\001\002\000\024\006\uff9b\007\uff9b\010\uff9b\011" +
    "\uff9b\012\uff9b\013\uff9b\056\uff9b\067\uff9b\100\uff9b\001\002" +
    "\000\024\006\110\007\136\010\131\011\134\012\135\013" +
    "\130\056\132\067\116\100\120\001\002\000\024\006\110" +
    "\007\136\010\131\011\134\012\135\013\130\056\132\067" +
    "\116\100\120\001\002\000\024\006\uff9a\007\uff9a\010\uff9a" +
    "\011\uff9a\012\uff9a\013\uff9a\056\uff9a\067\uff9a\100\uff9a\001" +
    "\002\000\050\031\uffb2\035\uffb2\046\uffb2\047\uffb2\055\uffb2" +
    "\057\uffb2\060\uffb2\061\uffb2\062\uffb2\063\uffb2\064\uffb2\065" +
    "\uffb2\066\uffb2\067\uffb2\070\uffb2\071\uffb2\072\uffb2\101\uffb2" +
    "\102\uffb2\001\002\000\050\031\uffb1\035\uffb1\046\uffb1\047" +
    "\uffb1\055\uffb1\057\uffb1\060\uffb1\061\uffb1\062\uffb1\063\uffb1" +
    "\064\uffb1\065\uffb1\066\uffb1\067\uffb1\070\uffb1\071\uffb1\072" +
    "\uffb1\101\uffb1\102\uffb1\001\002\000\024\031\uffb7\035\uffb7" +
    "\046\uffb7\047\uffb7\055\uffb7\057\uffb7\066\156\067\154\102" +
    "\165\001\002\000\050\031\uffb5\035\uffb5\046\uffb5\047\uffb5" +
    "\055\uffb5\057\uffb5\060\uffb5\061\uffb5\062\uffb5\063\uffb5\064" +
    "\uffb5\065\uffb5\066\uffb5\067\uffb5\070\170\071\173\072\167" +
    "\101\171\102\uffb5\001\002\000\024\006\uff98\007\uff98\010" +
    "\uff98\011\uff98\012\uff98\013\uff98\056\uff98\067\uff98\100\uff98" +
    "\001\002\000\024\006\uff97\007\uff97\010\uff97\011\uff97\012" +
    "\uff97\013\uff97\056\uff97\067\uff97\100\uff97\001\002\000\024" +
    "\006\110\007\136\010\131\011\134\012\135\013\130\056" +
    "\132\067\116\100\120\001\002\000\050\031\uffaf\035\uffaf" +
    "\046\uffaf\047\uffaf\055\uffaf\057\uffaf\060\uffaf\061\uffaf\062" +
    "\uffaf\063\uffaf\064\uffaf\065\uffaf\066\uffaf\067\uffaf\070\uffaf" +
    "\071\uffaf\072\uffaf\101\uffaf\102\uffaf\001\002\000\024\006" +
    "\110\007\136\010\131\011\134\012\135\013\130\056\132" +
    "\067\116\100\120\001\002\000\004\007\206\001\002\000" +
    "\062\031\uff8e\035\uff8e\046\uff8e\047\uff8e\050\uff8e\051\uff8e" +
    "\054\uff8e\055\uff8e\057\uff8e\060\uff8e\061\uff8e\062\uff8e\063" +
    "\uff8e\064\uff8e\065\uff8e\066\uff8e\067\uff8e\070\uff8e\071\uff8e" +
    "\072\uff8e\073\uff8e\074\uff8e\101\uff8e\102\uff8e\001\002\000" +
    "\004\055\210\001\002\000\062\031\uff8f\035\uff8f\046\uff8f" +
    "\047\uff8f\050\uff8f\051\uff8f\054\uff8f\055\uff8f\057\uff8f\060" +
    "\uff8f\061\uff8f\062\uff8f\063\uff8f\064\uff8f\065\uff8f\066\uff8f" +
    "\067\uff8f\070\uff8f\071\uff8f\072\uff8f\073\uff8f\074\uff8f\101" +
    "\uff8f\102\uff8f\001\002\000\024\006\110\007\136\010\131" +
    "\011\134\012\135\013\130\056\132\067\116\100\120\001" +
    "\002\000\054\031\uffad\035\uffad\046\uffad\047\uffad\055\uffad" +
    "\057\uffad\060\uffad\061\uffad\062\uffad\063\uffad\064\uffad\065" +
    "\uffad\066\uffad\067\uffad\070\uffad\071\uffad\072\uffad\073\uffad" +
    "\074\uffad\101\uffad\102\uffad\001\002\000\004\031\214\001" +
    "\002\000\026\006\110\024\076\025\112\026\102\027\100" +
    "\030\103\032\uffc0\033\uffc0\034\077\037\075\001\002\000" +
    "\030\006\110\024\076\025\112\026\102\027\100\030\103" +
    "\032\uffc1\033\uffc1\034\077\036\uffc1\037\075\001\002\000" +
    "\006\032\217\033\220\001\002\000\024\006\110\024\076" +
    "\025\112\026\102\027\100\030\103\033\uffc0\034\077\037" +
    "\075\001\002\000\032\006\uffc2\024\uffc2\025\uffc2\026\uffc2" +
    "\027\uffc2\030\uffc2\032\uffc2\033\uffc2\034\uffc2\036\uffc2\037" +
    "\uffc2\053\uffc2\001\002\000\004\033\222\001\002\000\032" +
    "\006\uffc3\024\uffc3\025\uffc3\026\uffc3\027\uffc3\030\uffc3\032" +
    "\uffc3\033\uffc3\034\uffc3\036\uffc3\037\uffc3\053\uffc3\001\002" +
    "\000\032\006\uffd2\024\uffd2\025\uffd2\026\uffd2\027\uffd2\030" +
    "\uffd2\032\uffd2\033\uffd2\034\uffd2\036\uffd2\037\uffd2\053\uffd2" +
    "\001\002\000\004\057\225\001\002\000\004\046\226\001" +
    "\002\000\032\006\uffc7\024\uffc7\025\uffc7\026\uffc7\027\uffc7" +
    "\030\uffc7\032\uffc7\033\uffc7\034\uffc7\036\uffc7\037\uffc7\053" +
    "\uffc7\001\002\000\004\053\uffd3\001\002\000\004\057\231" +
    "\001\002\000\004\046\232\001\002\000\032\006\uffc6\024" +
    "\uffc6\025\uffc6\026\uffc6\027\uffc6\030\uffc6\032\uffc6\033\uffc6" +
    "\034\uffc6\036\uffc6\037\uffc6\053\uffc6\001\002\000\004\035" +
    "\234\001\002\000\024\006\110\024\076\025\112\026\102" +
    "\027\100\030\103\034\077\036\uffc0\037\075\001\002\000" +
    "\004\036\236\001\002\000\032\006\uffbf\024\uffbf\025\uffbf" +
    "\026\uffbf\027\uffbf\030\uffbf\032\uffbf\033\uffbf\034\uffbf\036" +
    "\uffbf\037\uffbf\053\uffbf\001\002\000\004\006\110\001\002" +
    "\000\010\051\205\054\204\057\241\001\002\000\004\046" +
    "\242\001\002\000\032\006\uffc5\024\uffc5\025\uffc5\026\uffc5" +
    "\027\uffc5\030\uffc5\032\uffc5\033\uffc5\034\uffc5\036\uffc5\037" +
    "\uffc5\053\uffc5\001\002\000\004\056\244\001\002\000\006" +
    "\006\246\057\uffbc\001\002\000\006\047\255\057\uffbd\001" +
    "\002\000\004\050\253\001\002\000\004\057\251\001\002" +
    "\000\006\047\uffba\057\uffba\001\002\000\004\046\252\001" +
    "\002\000\032\006\uffbe\024\uffbe\025\uffbe\026\uffbe\027\uffbe" +
    "\030\uffbe\032\uffbe\033\uffbe\034\uffbe\036\uffbe\037\uffbe\053" +
    "\uffbe\001\002\000\024\006\110\007\136\010\131\011\134" +
    "\012\135\013\130\056\132\067\116\100\120\001\002\000" +
    "\006\047\uffb9\057\uffb9\001\002\000\004\006\246\001\002" +
    "\000\006\047\uffbb\057\uffbb\001\002\000\024\006\110\007" +
    "\136\010\131\011\134\012\135\013\130\056\132\067\116" +
    "\100\120\001\002\000\004\046\261\001\002\000\032\006" +
    "\uffc8\024\uffc8\025\uffc8\026\uffc8\027\uffc8\030\uffc8\032\uffc8" +
    "\033\uffc8\034\uffc8\036\uffc8\037\uffc8\053\uffc8\001\002\000" +
    "\006\047\266\057\uffeb\001\002\000\010\047\uffe8\054\053" +
    "\057\uffe8\001\002\000\004\057\265\001\002\000\014\006" +
    "\uffec\047\uffec\054\uffec\057\uffec\070\uffec\001\002\000\020" +
    "\006\045\040\044\041\033\042\046\043\035\044\032\056" +
    "\034\001\002\000\010\047\uffe9\054\053\057\uffe9\001\002" +
    "\000\004\023\uffdf\001\002\000\006\004\uffdd\053\uffdd\001" +
    "\002\000\004\053\uffff\001\002\000\004\020\274\001\002" +
    "\000\020\006\045\040\044\041\033\042\046\043\035\044" +
    "\032\056\034\001\002\000\006\020\uffe1\053\uffe1\001\002" +
    "\000\006\020\274\053\277\001\002\000\006\005\uffe4\023" +
    "\uffe4\001\002\000\006\020\uffe2\053\uffe2\001\002\000\006" +
    "\006\302\054\053\001\002\000\004\046\303\001\002\000" +
    "\006\020\uffe0\053\uffe0\001\002\000\004\022\307\001\002" +
    "\000\006\022\ufff6\053\ufff6\001\002\000\006\022\307\053" +
    "\313\001\002\000\020\006\045\040\044\041\033\042\046" +
    "\043\035\044\032\056\034\001\002\000\006\006\311\054" +
    "\053\001\002\000\004\046\312\001\002\000\006\022\ufff5" +
    "\053\ufff5\001\002\000\010\005\ufff9\017\ufff9\023\ufff9\001" +
    "\002\000\006\022\ufff7\053\ufff7\001\002\000\004\016\316" +
    "\001\002\000\014\040\044\041\033\042\046\043\035\044" +
    "\032\001\002\000\006\016\316\053\321\001\002\000\006" +
    "\016\ufffb\053\ufffb\001\002\000\012\005\ufffe\017\ufffe\021" +
    "\ufffe\023\ufffe\001\002\000\006\016\ufffc\053\ufffc\001\002" +
    "\000\004\006\324\001\002\000\004\050\325\001\002\000" +
    "\014\007\136\010\131\011\134\012\135\013\130\001\002" +
    "\000\004\046\327\001\002\000\006\016\ufffa\053\ufffa\001" +
    "\002\000\004\002\000\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\326\000\004\002\003\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\003\012\004\011\001\001\000\002\001\001\000\004\007" +
    "\015\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\020\017\001\001\000\002\001\001\000" +
    "\004\023\020\001\001\000\004\032\271\001\001\000\002" +
    "\001\001\000\006\024\023\025\025\001\001\000\004\025" +
    "\270\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\016\012\041\013\035\014" +
    "\037\026\036\027\042\030\040\001\001\000\002\001\001" +
    "\000\002\001\001\000\014\012\262\013\035\014\037\015" +
    "\263\016\261\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\012\012\041\013\035\014" +
    "\037\030\047\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\017\054\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\020\062\031" +
    "\063\001\001\000\004\032\065\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\030\033\100\034\072\035\071\036\105\037\104\040\110" +
    "\041\106\042\103\044\070\045\112\066\073\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\026\051" +
    "\232\052\125\053\123\054\122\055\121\056\120\057\126" +
    "\060\132\065\114\066\116\001\001\000\002\001\001\000" +
    "\026\034\222\035\071\036\105\037\104\040\110\041\106" +
    "\042\103\044\070\045\112\066\073\001\001\000\002\001" +
    "\001\000\026\051\212\052\125\053\123\054\122\055\121" +
    "\056\120\057\126\060\132\065\114\066\116\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\026\051\124\052\125\053\123" +
    "\054\122\055\121\056\120\057\126\060\132\065\114\066" +
    "\116\001\001\000\010\057\211\060\132\066\116\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\064\201\001\001\000\002\001\001\000\004\063\171" +
    "\001\001\000\006\061\163\062\162\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\026\051\140\052\125\053\123\054" +
    "\122\055\121\056\120\057\126\060\132\065\114\066\116" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\020\054\176\055\121" +
    "\056\120\057\126\060\132\065\114\066\116\001\001\000" +
    "\022\053\175\054\122\055\121\056\120\057\126\060\132" +
    "\065\114\066\116\001\001\000\020\054\165\055\121\056" +
    "\120\057\126\060\132\065\114\066\116\001\001\000\004" +
    "\063\171\001\001\000\002\001\001\000\002\001\001\000" +
    "\016\055\174\056\120\057\126\060\132\065\114\066\116" +
    "\001\001\000\016\055\173\056\120\057\126\060\132\065" +
    "\114\066\116\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\062\162\001\001\000\004\063" +
    "\171\001\001\000\002\001\001\000\002\001\001\000\016" +
    "\055\202\056\120\057\126\060\132\065\114\066\116\001" +
    "\001\000\002\001\001\000\026\051\206\052\125\053\123" +
    "\054\122\055\121\056\120\057\126\060\132\065\114\066" +
    "\116\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\026\051\140\052\125\053" +
    "\123\054\122\055\121\056\120\057\126\060\132\065\114" +
    "\066\116\001\001\000\002\001\001\000\002\001\001\000" +
    "\032\033\214\034\072\035\071\036\105\037\104\040\110" +
    "\041\106\042\103\043\215\044\070\045\112\066\073\001" +
    "\001\000\026\034\222\035\071\036\105\037\104\040\110" +
    "\041\106\042\103\044\070\045\112\066\073\001\001\000" +
    "\002\001\001\000\032\033\214\034\072\035\071\036\105" +
    "\037\104\040\110\041\106\042\103\043\220\044\070\045" +
    "\112\066\073\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\032\033\214\034\072\035\071\036\105\037\104" +
    "\040\110\041\106\042\103\043\234\044\070\045\112\066" +
    "\073\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\066\237\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\046\246\047\244" +
    "\050\247\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\026\051\253\052\125\053\123\054\122\055" +
    "\121\056\120\057\126\060\132\065\114\066\116\001\001" +
    "\000\002\001\001\000\004\050\255\001\001\000\002\001" +
    "\001\000\026\051\257\052\125\053\123\054\122\055\121" +
    "\056\120\057\126\060\132\065\114\066\116\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\010\012" +
    "\266\013\035\014\037\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\021" +
    "\275\022\274\001\001\000\010\012\300\013\035\014\037" +
    "\001\001\000\002\001\001\000\004\022\277\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\010\305\011\304\001" +
    "\001\000\002\001\001\000\004\011\313\001\001\000\010" +
    "\012\307\013\035\014\037\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\005\316\006\317\001\001\000\004\013" +
    "\322\001\001\000\004\006\321\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\060\325\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 1;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$parser$actions {


   private EAtribucion atrib = new EAtribucion();

  private final parser parser;

  /** Constructor */
  CUP$parser$actions(parser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$parser$do_action(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // Designador ::= Designador BARRABAJA NATURALES 
            {
              TAtributos RESULT =null;
		int Designador0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int Designador0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		TAtributos Designador0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int naturalesleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int naturalesright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Object naturales = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rDesignador2(Designador0, naturales); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Designador",52, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // Designador ::= Designador CORCAP Expr CORCCIERRE 
            {
              TAtributos RESULT =null;
		int Designador0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int Designador0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		TAtributos Designador0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int Expr0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int Expr0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		TAtributos Expr0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 RESULT = atrib.rDesignador1(Designador0, Expr0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Designador",52, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // Designador ::= IDENTIFICADOR 
            {
              TAtributos RESULT =null;
		int identificador0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int identificador0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String identificador0 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rDesignador0(identificador0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Designador",52, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // OpNivel4 ::= MENOS 
            {
              TAtributos RESULT =null;
		 RESULT = atrib.rOpNivel45(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("OpNivel4",51, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // OpNivel4 ::= NOT 
            {
              TAtributos RESULT =null;
		 RESULT = atrib.rOpNivel44(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("OpNivel4",51, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // OpNivel4 ::= PAP NAT PCIERRE 
            {
              TAtributos RESULT =null;
		 RESULT = atrib.rOpNivel43(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("OpNivel4",51, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // OpNivel4 ::= PAP CHAR PCIERRE 
            {
              TAtributos RESULT =null;
		 RESULT = atrib.rOpNivel42(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("OpNivel4",51, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // OpNivel4 ::= PAP INT PCIERRE 
            {
              TAtributos RESULT =null;
		 RESULT = atrib.rOpNivel41(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("OpNivel4",51, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // OpNivel4 ::= PAP FLOAT PCIERRE 
            {
              TAtributos RESULT =null;
		 RESULT = atrib.rOpNivel40(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("OpNivel4",51, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // OpNivel3 ::= DESPIZQ 
            {
              TAtributos RESULT =null;
		 RESULT = atrib.rOpNivel31(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("OpNivel3",50, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // OpNivel3 ::= DESPDER 
            {
              TAtributos RESULT =null;
		 RESULT = atrib.rOpNivel30(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("OpNivel3",50, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // OpNivel2 ::= MOD 
            {
              TAtributos RESULT =null;
		 RESULT = atrib.rOpNivel22(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("OpNivel2",49, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // OpNivel2 ::= DIV 
            {
              TAtributos RESULT =null;
		 RESULT = atrib.rOpNivel21(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("OpNivel2",49, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // OpNivel2 ::= MULT 
            {
              TAtributos RESULT =null;
		 RESULT = atrib.rOpNivel20(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("OpNivel2",49, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // OpNivel1 ::= MENOS 
            {
              TAtributos RESULT =null;
		 RESULT = atrib.rOpNivel11(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("OpNivel1",48, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // OpNivel1 ::= MAS 
            {
              TAtributos RESULT =null;
		 RESULT = atrib.rOpNivel10(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("OpNivel1",48, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // OpNivel0 ::= DISTINTO 
            {
              TAtributos RESULT =null;
		 RESULT = atrib.rOpNivel05(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("OpNivel0",47, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // OpNivel0 ::= IGUALIGUAL 
            {
              TAtributos RESULT =null;
		 RESULT = atrib.rOpNivel04(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("OpNivel0",47, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // OpNivel0 ::= MAYORIGUAL 
            {
              TAtributos RESULT =null;
		 RESULT = atrib.rOpNivel03(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("OpNivel0",47, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // OpNivel0 ::= MENORIGUAL 
            {
              TAtributos RESULT =null;
		 RESULT = atrib.rOpNivel02(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("OpNivel0",47, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // OpNivel0 ::= MAYOR 
            {
              TAtributos RESULT =null;
		 RESULT = atrib.rOpNivel01(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("OpNivel0",47, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // OpNivel0 ::= MENOR 
            {
              TAtributos RESULT =null;
		 RESULT = atrib.rOpNivel00(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("OpNivel0",47, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // ValorTipoBasico ::= BOOLEANO 
            {
              TAtributos RESULT =null;
		int booleano0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int booleano0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Object booleano0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rValorTipoBasico4(booleano0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ValorTipoBasico",46, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // ValorTipoBasico ::= REAL 
            {
              TAtributos RESULT =null;
		int real0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int real0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Object real0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rValorTipoBasico3(real0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ValorTipoBasico",46, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // ValorTipoBasico ::= NATURALES 
            {
              TAtributos RESULT =null;
		int naturales0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int naturales0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Object naturales0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rValorTipoBasico2(naturales0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ValorTipoBasico",46, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // ValorTipoBasico ::= ENTERO 
            {
              TAtributos RESULT =null;
		int entero0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int entero0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Object entero0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rValorTipoBasico1(entero0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ValorTipoBasico",46, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // ValorTipoBasico ::= CARACTER 
            {
              TAtributos RESULT =null;
		int caracter0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int caracter0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Object caracter0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rValorTipoBasico0(caracter0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ValorTipoBasico",46, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // Operando ::= ValorTipoBasico 
            {
              TAtributos RESULT =null;
		int ValorTipoBasico0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int ValorTipoBasico0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TAtributos ValorTipoBasico0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rOperando2(ValorTipoBasico0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Operando",45, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // Operando ::= Designador 
            {
              TAtributos RESULT =null;
		int Designador0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int Designador0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TAtributos Designador0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rOperando1(Designador0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Operando",45, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // Operando ::= PAP Expr PCIERRE 
            {
              TAtributos RESULT =null;
		int Expr0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int Expr0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		TAtributos Expr0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 RESULT = atrib.rOperando0(Expr0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Operando",45, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // Nivel4 ::= Operando 
            {
              TAtributos RESULT =null;
		int Operando0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int Operando0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TAtributos Operando0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rNivel41(Operando0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Nivel4",44, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // Nivel4 ::= OpNivel4 Operando 
            {
              TAtributos RESULT =null;
		int OpNivel40left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int OpNivel40right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		TAtributos OpNivel40 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int Operando0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int Operando0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TAtributos Operando0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rNivel40(OpNivel40, Operando0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Nivel4",44, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // Nivel3 ::= Nivel4 
            {
              TAtributos RESULT =null;
		int Nivel40left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int Nivel40right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TAtributos Nivel40 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rNivel31(Nivel40); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Nivel3",43, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // Nivel3 ::= Nivel4 OpNivel3 Nivel3 
            {
              TAtributos RESULT =null;
		int Nivel40left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int Nivel40right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		TAtributos Nivel40 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int OpNivel30left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int OpNivel30right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		TAtributos OpNivel30 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int Nivel30left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int Nivel30right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TAtributos Nivel30 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rNivel30(Nivel40, OpNivel30, Nivel30); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Nivel3",43, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // Nivel2 ::= Nivel3 
            {
              TAtributos RESULT =null;
		int Nivel30left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int Nivel30right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TAtributos Nivel30 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rNivel22(Nivel30); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Nivel2",42, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // Nivel2 ::= Nivel2 AND Nivel3 
            {
              TAtributos RESULT =null;
		int Nivel20left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int Nivel20right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		TAtributos Nivel20 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int Nivel30left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int Nivel30right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TAtributos Nivel30 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rNivel21(Nivel20, Nivel30); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Nivel2",42, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // Nivel2 ::= Nivel2 OpNivel2 Nivel3 
            {
              TAtributos RESULT =null;
		int Nivel20left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int Nivel20right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		TAtributos Nivel20 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int OpNivel20left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int OpNivel20right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		TAtributos OpNivel20 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int Nivel30left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int Nivel30right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TAtributos Nivel30 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rNivel20(Nivel20, OpNivel20, Nivel30); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Nivel2",42, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // Nivel1 ::= Nivel2 
            {
              TAtributos RESULT =null;
		int Nivel20left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int Nivel20right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TAtributos Nivel20 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rNivel12(Nivel20); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Nivel1",41, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // Nivel1 ::= Nivel1 OR Nivel2 
            {
              TAtributos RESULT =null;
		int Nivel10left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int Nivel10right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		TAtributos Nivel10 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int Nivel20left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int Nivel20right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TAtributos Nivel20 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rNivel11(Nivel10, Nivel20); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Nivel1",41, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // Nivel1 ::= Nivel1 OpNivel1 Nivel2 
            {
              TAtributos RESULT =null;
		int Nivel10left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int Nivel10right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		TAtributos Nivel10 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int OpNivel10left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int OpNivel10right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		TAtributos OpNivel10 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int Nivel20left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int Nivel20right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TAtributos Nivel20 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rNivel10(Nivel10, OpNivel10, Nivel20); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Nivel1",41, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // Nivel0 ::= Nivel1 
            {
              TAtributos RESULT =null;
		int Nivel10left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int Nivel10right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TAtributos Nivel10 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rNivel01(Nivel10); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Nivel0",40, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // Nivel0 ::= Nivel1 OpNivel0 Nivel1 
            {
              TAtributos RESULT =null;
		int Nivel10left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int Nivel10right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		TAtributos Nivel10 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int OpNivel00left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int OpNivel00right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		TAtributos OpNivel00 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int Nivel11left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int Nivel11right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TAtributos Nivel11 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rNivel00(Nivel10, OpNivel00, Nivel11); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Nivel0",40, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // Expr ::= Nivel0 
            {
              TAtributos RESULT =null;
		int Nivel00left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int Nivel00right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TAtributos Nivel00 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rExpr(Nivel00); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr",39, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // Argumento ::= IDENTIFICADOR IGUAL Expr 
            {
              TAtributos RESULT =null;
		int identificador0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int identificador0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String identificador0 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int Expr0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int Expr0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TAtributos Expr0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rArgumento(identificador0, Expr0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Argumento",38, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // Argumentos ::= Argumento 
            {
              TAtributos RESULT =null;
		int Argumento0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int Argumento0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TAtributos Argumento0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rArgumentos1(Argumento0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Argumentos",37, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // Argumentos ::= Argumentos COMA Argumento 
            {
              TAtributos RESULT =null;
		int Argumentos0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int Argumentos0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		TAtributos Argumentos0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int Argumento0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int Argumento0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TAtributos Argumento0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rArgumentos0(Argumentos0, Argumento0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Argumentos",37, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // DecArgs ::= 
            {
              TAtributos RESULT =null;
		 RESULT = atrib.rDecArgs1(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("DecArgs",36, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // DecArgs ::= Argumentos 
            {
              TAtributos RESULT =null;
		int Argumentos0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int Argumentos0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TAtributos Argumentos0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rDecArgs0(Argumentos0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("DecArgs",36, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // Calls ::= CALL IDENTIFICADOR PAP DecArgs PCIERRE PUNTOYCOMA 
            {
              TAtributos RESULT =null;
		int identificador0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int identificador0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String identificador0 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int DecArgs0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int DecArgs0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		TAtributos DecArgs0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		 RESULT = atrib.rCalls(identificador0, DecArgs0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Calls",35, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // Whiles ::= WHILE Expr DO InstrsV ENDWHILE 
            {
              TAtributos RESULT =null;
		int Expr0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int Expr0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		TAtributos Expr0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int InstrsV0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int InstrsV0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		TAtributos InstrsV0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 RESULT = atrib.rWhiles(Expr0, InstrsV0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Whiles",34, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // InstrsV ::= 
            {
              TAtributos RESULT =null;
		 RESULT = atrib.rInstrsV1(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("InstrsV",33, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // InstrsV ::= Instrs 
            {
              TAtributos RESULT =null;
		int Instrs0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int Instrs0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TAtributos Instrs0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rInstrsV0(Instrs0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("InstrsV",33, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // Ifs ::= IF Expr THEN InstrsV ENDIF 
            {
              TAtributos RESULT =null;
		int Expr0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int Expr0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		TAtributos Expr0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int InstrsV0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int InstrsV0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		TAtributos InstrsV0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 RESULT = atrib.rIfs1(Expr0, InstrsV0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Ifs",32, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // Ifs ::= IF Expr THEN InstrsV ELSE InstrsV ENDIF 
            {
              TAtributos RESULT =null;
		int Expr0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int Expr0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		TAtributos Expr0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int InstrsV0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int InstrsV0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		TAtributos InstrsV0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int InstrsV1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int InstrsV1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		TAtributos InstrsV1 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 RESULT = atrib.rIfs0(Expr0, InstrsV0, InstrsV1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Ifs",32, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // Escritura ::= OUT PAP Expr PCIERRE PUNTOYCOMA 
            {
              TAtributos RESULT =null;
		int Expr0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int Expr0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		TAtributos Expr0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		 RESULT = atrib.rEscritura(Expr0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Escritura",31, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // Lectura ::= IN PAP Designador PCIERRE PUNTOYCOMA 
            {
              TAtributos RESULT =null;
		int Designador0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int Designador0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		TAtributos Designador0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		 RESULT = atrib.rLectura(Designador0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Lectura",30, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // Swap2 ::= SWAP2 PAP PCIERRE PUNTOYCOMA 
            {
              TAtributos RESULT =null;
		 RESULT = atrib.rSwap2(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Swap2",29, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // Swap1 ::= SWAP1 PAP PCIERRE PUNTOYCOMA 
            {
              TAtributos RESULT =null;
		 RESULT = atrib.rSwap1(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Swap1",28, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // Asign ::= Designador IGUAL Expr PUNTOYCOMA 
            {
              TAtributos RESULT =null;
		int Designador0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int Designador0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		TAtributos Designador0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int Expr0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int Expr0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		TAtributos Expr0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 RESULT = atrib.rAsign(Designador0, Expr0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Asign",27, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // Instr ::= Calls 
            {
              TAtributos RESULT =null;
		int Calls0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int Calls0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TAtributos Calls0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rInstr7(Calls0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Instr",26, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // Instr ::= Whiles 
            {
              TAtributos RESULT =null;
		int Whiles0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int Whiles0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TAtributos Whiles0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rInstr6(Whiles0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Instr",26, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // Instr ::= Ifs 
            {
              TAtributos RESULT =null;
		int Ifs0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int Ifs0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TAtributos Ifs0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rInstr5(Ifs0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Instr",26, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // Instr ::= Swap2 
            {
              TAtributos RESULT =null;
		int Swap20left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int Swap20right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TAtributos Swap20 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rInstr4(Swap20); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Instr",26, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // Instr ::= Swap1 
            {
              TAtributos RESULT =null;
		int Swap10left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int Swap10right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TAtributos Swap10 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rInstr3(Swap10); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Instr",26, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // Instr ::= Escritura 
            {
              TAtributos RESULT =null;
		int Escritura0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int Escritura0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TAtributos Escritura0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rInstr2(Escritura0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Instr",26, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // Instr ::= Lectura 
            {
              TAtributos RESULT =null;
		int Lectura0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int Lectura0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TAtributos Lectura0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rInstr1(Lectura0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Instr",26, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // Instr ::= Asign 
            {
              TAtributos RESULT =null;
		int Asign0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int Asign0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TAtributos Asign0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rInstr0(Asign0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Instr",26, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // Instrs ::= Instr 
            {
              TAtributos RESULT =null;
		int Instr0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int Instr0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TAtributos Instr0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rInstrs1(Instr0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Instrs",25, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // Instrs ::= Instrs Instr 
            {
              TAtributos RESULT =null;
		int Instrs0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int Instrs0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		TAtributos Instrs0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int Instr0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int Instr0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TAtributos Instr0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rInstrs0(Instrs0, Instr0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Instrs",25, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // DecInstruc ::= INSTRUCTIONS LLAVEAP Instrs LLAVECIERRE 
            {
              TAtributos RESULT =null;
		int Instrs0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int Instrs0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		TAtributos Instrs0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 RESULT = atrib.rDecInstruc(Instrs0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("DecInstruc",24, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // Cuerpo ::= DecVariables DecInstruc 
            {
              TAtributos RESULT =null;
		int DecVariables0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int DecVariables0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		TAtributos DecVariables0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int DecInstruc0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int DecInstruc0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TAtributos DecInstruc0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rCuerpo(DecVariables0, DecInstruc0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Cuerpo",23, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // Parametro ::= DeclaracionTipo MULT IDENTIFICADOR 
            {
              TAtributos RESULT =null;
		int DeclaracionTipo0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int DeclaracionTipo0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		TAtributos DeclaracionTipo0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int identificador0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int identificador0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String identificador0 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rParametro1(DeclaracionTipo0, identificador0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Parametro",22, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // Parametro ::= DeclaracionTipo IDENTIFICADOR 
            {
              TAtributos RESULT =null;
		int DeclaracionTipo0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int DeclaracionTipo0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		TAtributos DeclaracionTipo0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int identificador0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int identificador0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String identificador0 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rParametro0(DeclaracionTipo0, identificador0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Parametro",22, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // Parametros ::= Parametro 
            {
              TAtributos RESULT =null;
		int Parametro0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int Parametro0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TAtributos Parametro0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rParametros1(Parametro0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Parametros",21, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // Parametros ::= Parametros COMA Parametro 
            {
              TAtributos RESULT =null;
		int Parametros0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int Parametros0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		TAtributos Parametros0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int Parametro0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int Parametro0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TAtributos Parametro0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rParametros0(Parametros0, Parametro0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Parametros",21, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // DecParams ::= 
            {
              TAtributos RESULT =null;
		 RESULT = atrib.rDecParams0(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("DecParams",20, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // DecParams ::= Parametros 
            {
              TAtributos RESULT =null;
		int Parametros0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int Parametros0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TAtributos Parametros0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rDecParams1(Parametros0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("DecParams",20, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // Subprograma ::= SUBPROGRAM DOSPUNTOS IDENTIFICADOR PAP DecParams PCIERRE LLAVEAP Cuerpo LLAVECIERRE 
            {
              TAtributos RESULT =null;
		int identificador0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int identificador0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		String identificador0 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int DecParams0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int DecParams0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		TAtributos DecParams0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int Cuerpo0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int Cuerpo0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		TAtributos Cuerpo0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 RESULT = atrib.rSubprograma(identificador0, DecParams0, Cuerpo0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Subprograma",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // Subprogramas ::= Subprograma 
            {
              TAtributos RESULT =null;
		int Subprograma0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int Subprograma0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TAtributos Subprograma0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rSubprogramas1(Subprograma0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Subprogramas",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // Subprogramas ::= Subprogramas Subprograma 
            {
              TAtributos RESULT =null;
		int Subprogramas0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int Subprogramas0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		TAtributos Subprogramas0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int Subprograma0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int Subprograma0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TAtributos Subprograma0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rSubprogramas0(Subprogramas0, Subprograma0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Subprogramas",18, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // DecSubprogramas ::= 
            {
              TAtributos RESULT =null;
		 RESULT = atrib.rDecSubprogramas1(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("DecSubprogramas",17, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // DecSubprogramas ::= SUBPROGRAMS LLAVEAP Subprogramas LLAVECIERRE 
            {
              TAtributos RESULT =null;
		int Subprogramas0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int Subprogramas0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		TAtributos Subprogramas0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 RESULT = atrib.rDecSubprogramas0(Subprogramas0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("DecSubprogramas",17, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // Variable ::= VAR DeclaracionTipo IDENTIFICADOR PUNTOYCOMA 
            {
              TAtributos RESULT =null;
		int DeclaracionTipo0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int DeclaracionTipo0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		TAtributos DeclaracionTipo0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int identificador0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int identificador0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String identificador0 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 RESULT = atrib.rVariable0(DeclaracionTipo0, identificador0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Variable",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // Variables ::= Variable 
            {
              TAtributos RESULT =null;
		int Variable0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int Variable0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TAtributos Variable0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rVariables1(Variable0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Variables",15, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // Variables ::= Variables Variable 
            {
              TAtributos RESULT =null;
		int Variables1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int Variables1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		TAtributos Variables1 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int Variable0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int Variable0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TAtributos Variable0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rVariables0(Variables1,Variable0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Variables",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // DecVariables ::= 
            {
              TAtributos RESULT =null;
		 RESULT = atrib.rDecVariables1(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("DecVariables",14, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // DecVariables ::= VARS LLAVEAP Variables LLAVECIERRE 
            {
              TAtributos RESULT =null;
		int Variables0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int Variables0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		TAtributos Variables0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 RESULT = atrib.rDecVariables0(Variables0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("DecVariables",14, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // TipoIndice ::= NATURALES 
            {
              TAtributos RESULT =null;
		int natural0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int natural0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Object natural0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rTipoIndice1(natural0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("TipoIndice",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // TipoIndice ::= IDENTIFICADOR 
            {
              TAtributos RESULT =null;
		int identificador0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int identificador0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String identificador0 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rTipoIndice0(identificador0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("TipoIndice",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // TipoNoBasico ::= DeclaracionTipo CORCAP TipoIndice CORCCIERRE 
            {
              TAtributos RESULT =null;
		int DeclaracionTipo0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int DeclaracionTipo0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		TAtributos DeclaracionTipo0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int TipoIndice0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int TipoIndice0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		TAtributos TipoIndice0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 RESULT = atrib.rTipoNoBasico2(DeclaracionTipo0,TipoIndice0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("TipoNoBasico",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // Tuplas ::= DeclaracionTipo 
            {
              TAtributos RESULT =null;
		int DeclaracionTipo0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int DeclaracionTipo0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TAtributos DeclaracionTipo0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rTuplas1(DeclaracionTipo0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Tuplas",12, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // Tuplas ::= Tuplas COMA DeclaracionTipo 
            {
              TAtributos RESULT =null;
		int Tuplas0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int Tuplas0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		TAtributos Tuplas0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int DeclaracionTipo0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int DeclaracionTipo0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TAtributos DeclaracionTipo0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rTuplas0(Tuplas0, DeclaracionTipo0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Tuplas",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // DecTuplas ::= 
            {
              TAtributos RESULT =null;
		 RESULT = atrib.rDecTuplas1(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("DecTuplas",11, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // DecTuplas ::= Tuplas 
            {
              TAtributos RESULT =null;
		int Tuplas0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int Tuplas0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TAtributos Tuplas0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rDecTuplas0(Tuplas0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("DecTuplas",11, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // TipoNoBasico ::= PAP DecTuplas PCIERRE 
            {
              TAtributos RESULT =null;
		int DecTuplas0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int DecTuplas0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		TAtributos DecTuplas0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 RESULT = atrib.rTipoNoBasico1(DecTuplas0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("TipoNoBasico",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // TipoNoBasico ::= IDENTIFICADOR 
            {
              TAtributos RESULT =null;
		int identificador0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int identificador0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String identificador0 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rTipoNoBasico0(identificador0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("TipoNoBasico",10, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // TipoBasico ::= CHARACTER 
            {
              TAtributos RESULT =null;
		int character0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int character0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Object character0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rTipoBasico4(character0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("TipoBasico",9, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // TipoBasico ::= BOOLEAN 
            {
              TAtributos RESULT =null;
		int boolean0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int boolean0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Object boolean0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rTipoBasico3(boolean0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("TipoBasico",9, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // TipoBasico ::= FLOAT 
            {
              TAtributos RESULT =null;
		int float0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int float0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Object float0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rTipoBasico2(float0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("TipoBasico",9, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // TipoBasico ::= INTEGER 
            {
              TAtributos RESULT =null;
		int integer0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int integer0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Object integer0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rTipoBasico1(integer0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("TipoBasico",9, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // TipoBasico ::= NATURAL 
            {
              TAtributos RESULT =null;
		int natural0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int natural0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Object natural0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rTipoBasico0(natural0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("TipoBasico",9, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // DeclaracionTipo ::= TipoNoBasico 
            {
              TAtributos RESULT =null;
		int TipoNoBasico0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int TipoNoBasico0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TAtributos TipoNoBasico0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rDeclaracionTipo1(TipoNoBasico0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("DeclaracionTipo",8, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // DeclaracionTipo ::= TipoBasico 
            {
              TAtributos RESULT =null;
		int TipoBasico0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int TipoBasico0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TAtributos TipoBasico0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rDeclaracionTipo0(TipoBasico0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("DeclaracionTipo",8, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // Tipo ::= TIPO DeclaracionTipo IDENTIFICADOR PUNTOYCOMA 
            {
              TAtributos RESULT =null;
		int DeclaracionTipo0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int DeclaracionTipo0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		TAtributos DeclaracionTipo0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int identificador0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int identificador0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String identificador0 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 RESULT = atrib.rTipo0(DeclaracionTipo0,identificador0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Tipo",7, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // Tipos ::= Tipo 
            {
              TAtributos RESULT =null;
		int Tipo0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int Tipo0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TAtributos Tipo0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rTipos1(Tipo0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Tipos",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // Tipos ::= Tipos Tipo 
            {
              TAtributos RESULT =null;
		int Tipos0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int Tipos0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		TAtributos Tipos0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int Tipo0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int Tipo0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TAtributos Tipo0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rTipos0(Tipos0, Tipo0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Tipos",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // DecTipos ::= 
            {
              TAtributos RESULT =null;
		 RESULT = atrib.rDecTipos1(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("DecTipos",5, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // DecTipos ::= TIPOS LLAVEAP Tipos LLAVECIERRE 
            {
              TAtributos RESULT =null;
		int Tipos0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int Tipos0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		TAtributos Tipos0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 RESULT = atrib.rDecTipos0(Tipos0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("DecTipos",5, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // Constante ::= CONST TipoBasico IDENTIFICADOR IGUAL ValorTipoBasico PUNTOYCOMA 
            {
              TAtributos RESULT =null;
		int TipoBasico0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int TipoBasico0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		TAtributos TipoBasico0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int Idenleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int Idenright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String Iden = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int ValorTipoBasico0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int ValorTipoBasico0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		TAtributos ValorTipoBasico0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 RESULT = atrib.rConstante(TipoBasico0, Iden, ValorTipoBasico0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Constante",4, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // Constantes ::= Constante 
            {
              TAtributos RESULT =null;
		int Constante0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int Constante0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TAtributos Constante0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rConstantes1(Constante0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Constantes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // Constantes ::= Constantes Constante 
            {
              TAtributos RESULT =null;
		int Constantes0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int Constantes0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		TAtributos Constantes0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int Constante0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int Constante0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TAtributos Constante0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rConstantes0(Constantes0, Constante0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Constantes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // DecConstantes ::= 
            {
              TAtributos RESULT =null;
		 RESULT = atrib.rDecConstantes1(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("DecConstantes",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // DecConstantes ::= CONSTS LLAVEAP Constantes LLAVECIERRE 
            {
              TAtributos RESULT =null;
		int Constantes0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int Constantes0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		TAtributos Constantes0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 RESULT = atrib.rDecConstantes0(Constantes0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("DecConstantes",2, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // Prog ::= DecConstantes DecTipos DecVariables DecSubprogramas DecInstruc 
            {
              TAtributos RESULT =null;
		int DecConstantes0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int DecConstantes0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		TAtributos DecConstantes0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int DecTipos0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int DecTipos0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		TAtributos DecTipos0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int DecVariables0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int DecVariables0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		TAtributos DecVariables0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int DecSubprogramas0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int DecSubprogramas0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		TAtributos DecSubprogramas0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int DecInstruc0left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int DecInstruc0right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TAtributos DecInstruc0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = atrib.rProg(DecConstantes0, DecTipos0, DecVariables0, DecSubprogramas0, DecInstruc0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Prog",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // $START ::= Inicio EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		TAtributos start_val = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT = start_val;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$parser$parser.done_parsing();
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // Inicio ::= PROGRAM DOSPUNTOS IDENTIFICADOR LLAVEAP Prog LLAVECIERRE 
            {
              TAtributos RESULT =null;
		int Prog0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int Prog0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		TAtributos Prog0 = (TAtributos)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 RESULT = atrib.rInicio(Prog0); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Inicio",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

